openapi: "3.0.0"
info:
  version: 1.0.0
  title: User API
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /users:
    get:
      summary: List all users
      operationId: listUsers
      tags:
        - USERS
      parameters:
        - name: limit
          in: query
          description: How many users to fetch at single stretch (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of Users returned from DB
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/users"
            application/xml:
              schema:
                $ref: "#/components/schemas/users"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new user
      operationId: create
      tags:
        - USERS
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/{userId}:
    get:
      summary: get a single user by ID
      operationId: showPetById
      tags:
        - USERS
      parameters:
        - name: userId
          in: path
          required: true
          description: User to be retrieved..
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/users"
            application/xml:
              schema:
                $ref: "#/components/schemas/users"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    user:
      required:
        - userId
        - userName
      properties:
        userId:
          type: integer
          format: int64
        userName:
          type: string
        userDescription:
          type: string
        system:
          type: string
    users:
      type: array
      items:
        $ref: "#/components/schemas/user"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
